
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% ERRORS
%
% Vesna control error detection file. M-file consists of a function that
% provides 'options' an output parameter (connection specification to
% Arduino API Cloud). It requires an input parameter 'id' which represents
% the identifier of the error that occurred during the control, as well as
% 'spec' which specifies the number of function calls. The error message is
% displayed in the MATLAB Command Window. A notification e-mail with
% a description of the error is sent to the user's e-mail.
%
% List of used functions
%   email         - check the type of error that occurred. If an error
%                   occurs, it tries to resolve it and informs the user. It
%                   requires 'id' parameter.
%   reconnect     - connection to the Arduino API Cloud which ensures data
%                   transfer between the server and the control script.
%
% List of input variables
%   id            - identifier of the error. Specifies the type of e-mail
%                   to send about the corresponding error.
%   spec          - specifies to send an e-mail and display the error to
%                   the Command Window.
%
% List of output variables
%   options       - settings to connect to the Arduino API Cloud.
%
% List of local variables
%   eType         - type of the detected error (error specification).
%   eMessage      - description of the detected error (error message).
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function options = errors(id,spec)

% Error description
keySet = {'connect', ...
          'email', ...
          'light', ...
          'lighting', ...
          'door', ...
          'heating', ...
          'pump', ...
          'fan', ...
          'tempT', ...
          'tempB', ...
          'bmmeH', ...
          'dhtH'};
valueSet1 = {'Arduino API Cloud Connection', ...
    'Email', ...
    'Light', ...
    'Lighting', ...
    'Door', ...
    'Heating', ...
    'Pump', ...
    'Fan', ...
    'Top Temperature', ...
    'Bottom Temperature', ...
    'BMME Humidity', ...
    'DHT Humidity'};
valueSet2 = {' connect to Arduino API Cloud.', ...
    ' send an error notification by e-mail. Check the senderʼs credentials and recipientʼs address.', ...
    ' load/send light intensity data from/to Cloud.', ...
    ' load/send lighting power supply from/to Cloud.', ...
    ' load/send door position data from/to Cloud.', ...
    ' load/send heating power supply from/to Cloud.', ...
    ' load/send pump power supply from/to Cloud.', ...
    ' load/send fan power supply from/to Cloud.', ...
    ' load/send top temperature data from/to Cloud.', ...
    ' load/send bottom temperature data from/to Cloud.', ...
    ' load/send BMME humidity data from/to Cloud.', ...
    ' load/send DHT humidity data from/to Cloud.'};

eType = containers.Map(keySet,valueSet1);
eMessage = containers.Map(keySet,valueSet2);

% Error display
if ~mod(spec,5)
    fprintf(2,strcat(eType(id),' Error (',string(datetime('now')), ...
        ')\nUnable to',eMessage(id),'\n\n'))
end

% Send mail notification troubleshooting
if ~strcmp(id,'email')

    % Send mail notification after each 5 unsuccessful attempts
    if ~mod(spec,5)
        email(id)
    end

    % Reconnect to Arduino API Cloud
    if ~strcmp(id,'connect')
        options = reconnect;
    end
end

end
