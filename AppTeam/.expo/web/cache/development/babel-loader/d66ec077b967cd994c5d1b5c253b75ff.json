{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\ReactNative2021\\\\projekt\\\\App.js\";\nimport Navigator from \"./route/mainMenu\";\nimport React from 'react';\n\nfunction App() {\n  var ThingSpeakClient = require('thingspeakclient');\n\n  var client = new ThingSpeakClient({\n    server: 'http://localhost:19006'\n  });\n  var yourWriteKey = 'vesnatest';\n  var channelID = 1548631;\n  client.attachChannel(channelID, {\n    writeKey: 'yourWriteKey'\n  }, callBackThingspeak);\n  client.updateChannel(channelID, {\n    field1: 7,\n    field2: 6\n  }, function (err, resp) {\n    if (!err && resp > 0) {\n      console.log('update successfully. Entry number was: ' + resp);\n    } else {\n      console.log(err);\n    }\n  });\n\n  function callBackThingspeak(err, resp) {\n    if (!err && resp > 0) {\n      console.log('Successfully. response was: ' + resp);\n    } else {\n      console.log(err);\n    }\n  }\n\n  return React.createElement(Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Dell/ReactNative2021/projekt/App.js"],"names":["Navigator","React","App","ThingSpeakClient","require","client","server","yourWriteKey","channelID","attachChannel","writeKey","callBackThingspeak","updateChannel","field1","field2","err","resp","console","log"],"mappings":";AAAA,OAAOA,SAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAEb,MAAIC,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AACA,MAAIC,MAAM,GAAG,IAAIF,gBAAJ,CAAqB;AAACG,IAAAA,MAAM,EAAC;AAAR,GAArB,CAAb;AAEA,MAAIC,YAAY,GAAG,WAAnB;AACA,MAAIC,SAAS,GAAG,OAAhB;AAEAH,EAAAA,MAAM,CAACI,aAAP,CAAqBD,SAArB,EAAgC;AAAEE,IAAAA,QAAQ,EAAC;AAAX,GAAhC,EAA4DC,kBAA5D;AACAN,EAAAA,MAAM,CAACO,aAAP,CAAqBJ,SAArB,EAAgC;AAACK,IAAAA,MAAM,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAhC,EAAwD,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACxE,QAAI,CAACD,GAAD,IAAQC,IAAI,GAAG,CAAnB,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAA4CF,IAAxD;AACH,KAFD,MAGK;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACJ,GAPD;;AAQA,WAASJ,kBAAT,CAA4BI,GAA5B,EAAiCC,IAAjC,EACA;AACI,QAAI,CAACD,GAAD,IAAQC,IAAI,GAAG,CAAnB,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,IAA7C;AACH,KAFD,MAGK;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACJ;;AAED,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AACD,eAAeb,GAAf","sourcesContent":["import Navigator from './route/mainMenu'\nimport React from 'react';\n\nfunction App() {\n\n  var ThingSpeakClient = require('thingspeakclient');\n  var client = new ThingSpeakClient({server:'http://localhost:19006'});\n\n  var yourWriteKey = 'vesnatest';\n  var channelID = 1548631;\n\n  client.attachChannel(channelID, { writeKey:'yourWriteKey'}, callBackThingspeak);\n  client.updateChannel(channelID, {field1: 7, field2: 6}, function(err, resp) {\n      if (!err && resp > 0) {\n          console.log('update successfully. Entry number was: ' + resp);\n      }\n      else {\n        console.log(err);\n      }\n  });\n  function callBackThingspeak(err, resp)\n  {\n      if (!err && resp > 0) {\n          console.log('Successfully. response was: ' + resp);\n      }\n      else {\n        console.log(err);\n      }\n  }\n\n  return (\n    <Navigator/>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}