{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\ReactNative2021\\\\projekt\\\\App.js\";\nimport Home from \"./screens/HomeScreen\";\nimport { AppLoading } from 'expo';\nimport Navigator from \"./route/vesnaStack\";\nimport * as Font from 'expo-font';\nimport React, { useState } from 'react';\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'amsterdam-laviera': require(\"./assets/fonts/Amsterdam Laviera.ttf\"),\n    'southern-aire': require(\"./assets/fonts/SouthernAire_Personal_Use_Only.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  return React.createElement(Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Dell/ReactNative2021/projekt/App.js"],"names":["Home","AppLoading","Navigator","Font","React","useState","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded"],"mappings":";;AAAA,OAAOA,IAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,SAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMH,IAAI,CAACI,SAAL,CAAe;AACpC,yBAAqBC,OAAO,wCADQ;AAEpC,qBAAiBA,OAAO;AAFY,GAAf,CAAN;AAAA,CAAjB;;AAKA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAsCJ,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB;;AAGE,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWH","sourcesContent":["import Home from './screens/HomeScreen'\nimport { AppLoading } from 'expo';\nimport Navigator from './route/vesnaStack'\nimport * as Font from 'expo-font';\nimport React, { useState } from 'react';\n\nconst getFonts = () => Font.loadAsync({\n  'amsterdam-laviera': require('./assets/fonts/Amsterdam Laviera.ttf'),\n  'southern-aire': require('./assets/fonts/SouthernAire_Personal_Use_Only.ttf')\n});\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n//  if(fontsLoaded){\n    return (\n      <Navigator />\n//    );\n//  } else {\n//    return (\n//      <AppLoading\n//        startAsync={getFonts}\n//        onFinish={() => setFontsLoaded(true)}\n//      />\n    )\n  //}\n}\n"]},"metadata":{},"sourceType":"module"}