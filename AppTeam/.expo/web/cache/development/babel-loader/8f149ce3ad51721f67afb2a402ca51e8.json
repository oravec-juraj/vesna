{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\ReactNative2021\\\\projekt\\\\App.js\";\nimport Navigator from \"./route/mainMenu\";\nimport React from 'react';\n\nvar ThingSpeakClient = require('thingspeakclient');\n\nvar client = new ThingSpeakClient({\n  server: 'http://localhost:19006',\n  useTimeoutMode: false\n});\nvar yourWriteKey = 'vesnatest';\nvar channelID = 1548631;\nclient.attachChannel(channelID, {\n  writeKey: 'yourWriteKey'\n}, callBackThingspeak);\nclient.updateChannel(channelID, {\n  field1: 7,\n  field2: 6\n}, function (err, resp) {\n  if (!err && resp > 0) {\n    console.log('update successfully. Entry number was: ' + resp);\n  } else {\n    console.log(err);\n  }\n});\n\nfunction callBackThingspeak(err, resp) {\n  if (!err && resp > 0) {\n    console.log('Successfully. response was: ' + resp);\n  } else {\n    console.log(err);\n  }\n}\n\nfunction App() {\n  return React.createElement(Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Dell/ReactNative2021/projekt/App.js"],"names":["Navigator","React","ThingSpeakClient","require","client","server","useTimeoutMode","yourWriteKey","channelID","attachChannel","writeKey","callBackThingspeak","updateChannel","field1","field2","err","resp","console","log","App"],"mappings":";AAAA,OAAOA,SAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AACA,IAAIC,MAAM,GAAG,IAAIF,gBAAJ,CAAqB;AAACG,EAAAA,MAAM,EAAC,wBAAR;AAAkCC,EAAAA,cAAc,EAAC;AAAjD,CAArB,CAAb;AAEA,IAAIC,YAAY,GAAG,WAAnB;AACA,IAAIC,SAAS,GAAG,OAAhB;AAEAJ,MAAM,CAACK,aAAP,CAAqBD,SAArB,EAAgC;AAAEE,EAAAA,QAAQ,EAAC;AAAX,CAAhC,EAA4DC,kBAA5D;AACAP,MAAM,CAACQ,aAAP,CAAqBJ,SAArB,EAAgC;AAACK,EAAAA,MAAM,EAAE,CAAT;AAAYC,EAAAA,MAAM,EAAE;AAApB,CAAhC,EAAwD,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACxE,MAAI,CAACD,GAAD,IAAQC,IAAI,GAAG,CAAnB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAA4CF,IAAxD;AACH,GAFD,MAGK;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACJ,CAPD;;AAQA,SAASJ,kBAAT,CAA4BI,GAA5B,EAAiCC,IAAjC,EACA;AACI,MAAI,CAACD,GAAD,IAAQC,IAAI,GAAG,CAAnB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,IAA7C;AACH,GAFD,MAGK;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACJ;;AAED,SAASI,GAAT,GAAe;AAEb,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AACD,eAAeA,GAAf","sourcesContent":["import Navigator from './route/mainMenu'\nimport React from 'react';\n\nvar ThingSpeakClient = require('thingspeakclient');\nvar client = new ThingSpeakClient({server:'http://localhost:19006', useTimeoutMode:false});\n\nvar yourWriteKey = 'vesnatest';\nvar channelID = 1548631;\n\nclient.attachChannel(channelID, { writeKey:'yourWriteKey'}, callBackThingspeak);\nclient.updateChannel(channelID, {field1: 7, field2: 6}, function(err, resp) {\n    if (!err && resp > 0) {\n        console.log('update successfully. Entry number was: ' + resp);\n    }\n    else {\n      console.log(err);\n    }\n});\nfunction callBackThingspeak(err, resp)\n{\n    if (!err && resp > 0) {\n        console.log('Successfully. response was: ' + resp);\n    }\n    else {\n      console.log(err);\n    }\n}\n\nfunction App() {\n\n  return (\n    <Navigator/>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}