{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\ReactNative2021\\\\projekt\\\\screens\\\\Temperature.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { IconButton, Colors } from 'react-native-paper';\nimport { WebView } from 'react-native-webview';\n\nvar ThingSpeakClient = require('thingspeakclient');\n\nvar client = new ThingSpeakClient({\n  server: 'http://localhost:19006',\n  useTimeoutMode: false\n});\nvar yourReadKey = 'vesnatest';\nvar channelID = 1548631;\nclient.attachChannel(channelId);\nexport default function Temperature(_ref) {\n  var navigation = _ref.navigation;\n\n  var pressHandler = function pressHandler() {\n    navigation.goBack();\n  };\n\n  var Light = function Light() {\n    navigation.replace('Light');\n  };\n\n  var AirQuality = function AirQuality() {\n    navigation.replace('AirQuality');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Temperature sensor\"), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      height: 50,\n      position: 'absolute',\n      bottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(IconButton, {\n    icon: \"brightness-6\",\n    size: 50,\n    onPress: Light,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(IconButton, {\n    icon: \"air-filter\",\n    size: 50,\n    onPress: AirQuality,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Dell/ReactNative2021/projekt/screens/Temperature.js"],"names":["React","IconButton","Colors","WebView","ThingSpeakClient","require","client","server","useTimeoutMode","yourReadKey","channelID","attachChannel","channelId","Temperature","navigation","pressHandler","goBack","Light","replace","AirQuality","flex","flexDirection","height","position","bottom"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;;AAEA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,oBAAnC;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AACA,IAAIC,MAAM,GAAG,IAAIF,gBAAJ,CAAqB;AAACG,EAAAA,MAAM,EAAC,wBAAR;AAAkCC,EAAAA,cAAc,EAAC;AAAjD,CAArB,CAAb;AAEA,IAAIC,WAAW,GAAG,WAAlB;AACA,IAAIC,SAAS,GAAG,OAAhB;AAEAJ,MAAM,CAACK,aAAP,CAAqBC,SAArB;AAEA,eAAe,SAASC,WAAT,OAAqC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAElD,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,UAAU,CAACE,MAAX;AACD,GAFD;;AAIA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBH,IAAAA,UAAU,CAACI,OAAX,CAAmB,OAAnB;AACH,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBL,IAAAA,UAAU,CAACI,OAAX,CAAmB,YAAnB;AACH,GAFD;;AAIA,SAEE,0CAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAC,KAAf;AAAsBC,MAAAA,MAAM,EAAE,EAA9B;AAAkCC,MAAAA,QAAQ,EAAE,UAA5C;AAAwDC,MAAAA,MAAM,EAAE;AAAhE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACJ,MAAAA,IAAI,EAAC;AAAN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAE,EAAtC;AAA0C,IAAA,OAAO,EAAEH,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACG,MAAAA,IAAI,EAAC;AAAN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,OAAO,EAAED,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CALF,CAFF;AAoBD","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, SafeAreaView, View, Text, TouchableOpacity, TextInput, Button, ImageBackground } from 'react-native';\r\nimport { IconButton, Colors } from 'react-native-paper';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nvar ThingSpeakClient = require('thingspeakclient');\r\nvar client = new ThingSpeakClient({server:'http://localhost:19006', useTimeoutMode:false});\r\n\r\nvar yourReadKey = 'vesnatest';\r\nvar channelID = 1548631;\r\n\r\nclient.attachChannel(channelId);//, { readKey:'yourReadKey'}, callBack);\r\n\r\nexport default function Temperature({ navigation }) {\r\n\r\n  const pressHandler = () => {\r\n    navigation.goBack();\r\n  }\r\n\r\n  const Light = () => {\r\n      navigation.replace('Light')\r\n  }\r\n\r\n  const AirQuality = () => {\r\n      navigation.replace('AirQuality')\r\n  }\r\n\r\n  return (\r\n    //<WebView source={{ uri: 'https://thingspeak.com/channels/1548631/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&type=line&update=15' }}>\r\n    <>\r\n    {/*<WebView source={{ uri: 'https://thingspeak.com/channels/1548631/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&type=line&update=15' }} />\r\n   */}<View>\r\n        Temperature sensor\r\n      </View>\r\n      <View style={{flex: 1}}>\r\n        <View style={{flexDirection:\"row\", height: 50, position: 'absolute', bottom: 30}}>\r\n          <View style={{flex:1}}>\r\n            <IconButton icon=\"brightness-6\" size={50} onPress={Light}/>\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <IconButton icon=\"air-filter\" size={50} onPress={AirQuality}/>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </>\r\n    //</WebView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}